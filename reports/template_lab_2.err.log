Traceback (most recent call last):
  File "/home/josefine/miniconda3/envs/cb2070-test/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/josefine/miniconda3/envs/cb2070-test/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/josefine/miniconda3/envs/cb2070-test/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/josefine/miniconda3/envs/cb2070-test/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/josefine/miniconda3/envs/cb2070-test/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/josefine/miniconda3/envs/cb2070-test/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/josefine/miniconda3/envs/cb2070-test/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/josefine/miniconda3/envs/cb2070-test/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
scf_drv = vlx.ScfRestrictedDriver()
scf_drv.ostream.mute()
scf_results = ...

# list the keys in the SCF result dictionary
print('Keys in the SCF result dictionary:')
for key in scf_results.keys():
    print('\t' + key)

# obtain tensors
E = ...
C = ...
D = ...
F = ...
S = ...

print('\nC, D, F, S matrix shapes:\n', np.shape(C), np.shape(D), np.shape(F), np.shape(S))
------------------

----- stdout -----
Keys in the SCF result dictionary:
------------------

[31m---------------------------------------------------------------------------[39m
[31mAttributeError[39m                            Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 7[39m
[32m      5[39m [38;5;66;03m# list the keys in the SCF result dictionary[39;00m
[32m      6[39m [38;5;28mprint[39m([33m'[39m[33mKeys in the SCF result dictionary:[39m[33m'[39m)
[32m----> [39m[32m7[39m [38;5;28;01mfor[39;00m key [38;5;129;01min[39;00m [43mscf_results[49m[43m.[49m[43mkeys[49m():
[32m      8[39m     [38;5;28mprint[39m([33m'[39m[38;5;130;01m\t[39;00m[33m'[39m + key)
[32m     10[39m [38;5;66;03m# obtain tensors[39;00m

[31mAttributeError[39m: 'ellipsis' object has no attribute 'keys'

